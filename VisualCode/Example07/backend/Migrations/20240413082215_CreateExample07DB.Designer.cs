// <auto-generated />
using System;
using MacQuocHuy.Exercise02.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(Exercise02Context))]
    [Migration("20240413082215_CreateExample07DB")]
    partial class CreateExample07DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Attribute", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("attribute_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_ATR_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("attributes", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Attribute_Value", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("attribute_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("attribute_value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_ATRVAL_ID");

                    b.HasIndex("attribute_id");

                    b.ToTable("attribute_values", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Card", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_CARD_ID");

                    b.HasIndex("customer_id");

                    b.ToTable("cards", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Card_Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("card_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_CARD_ITEM_ID");

                    b.HasIndex("card_id");

                    b.HasIndex("product_id");

                    b.ToTable("card_items", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("category_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageplaceholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("parent_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("update_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_CAT_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("parent_id");

                    b.HasIndex("updated_by");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Countrie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("iso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iso3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_code")
                        .HasColumnType("int");

                    b.Property<int>("phone_code")
                        .HasColumnType("int");

                    b.Property<string>("upper_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_COUTR_ID");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Coupon", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("coupon_end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("coupon_start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("discount_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("discount_value")
                        .HasColumnType("float");

                    b.Property<double>("max_usage")
                        .HasColumnType("float");

                    b.Property<double>("order_amount_limit")
                        .HasColumnType("float");

                    b.Property<double>("times_used")
                        .HasColumnType("float");

                    b.HasKey("id")
                        .HasName("PK_COU_ID");

                    b.ToTable("coupons", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Customer", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registered_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PK_CUS_ID");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Customer_Addresse", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address_line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dial_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postal_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_CUSA_ID");

                    b.HasIndex("customer_id");

                    b.ToTable("customer_addresses", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Gallery", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("is_thumbnail")
                        .HasColumnType("bit");

                    b.Property<string>("placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("id")
                        .HasName("PK_GALL_ID");

                    b.HasIndex("product_id");

                    b.ToTable("gallery", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Notification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("account_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("notification_expiry_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("receive_time")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("seen")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_NO_ID");

                    b.HasIndex("account_id");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Order", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("coupon_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("customer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("order_approved_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("order_delvered_carrier_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("order_delvered_customer_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("order_status_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_OR_ID");

                    b.HasIndex("coupon_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_status_id");

                    b.HasIndex("updated_by");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Order_Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("order_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_ORIT_ID");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Order_Status", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("privacy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_ORS_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("order_statuses", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("buying_price")
                        .HasColumnType("float");

                    b.Property<double?>("compare_price")
                        .HasColumnType("float");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("disable_out_of_stock")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("published")
                        .HasColumnType("bit");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("sale_percent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("sale_price")
                        .HasColumnType("float");

                    b.Property<string>("short_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PR_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Attribute", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("attribute_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRATR_ID");

                    b.HasIndex("attribute_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_attributes", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Attribute_Value", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("attribute_value_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_attribute_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRATRVAL_ID");

                    b.HasIndex("attribute_value_id");

                    b.HasIndex("product_attribute_id");

                    b.ToTable("product_attribute_values", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("category_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRCAT_ID");

                    b.HasIndex("category_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_categories", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Coupon", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("coupon_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PRCOU_ID");

                    b.HasIndex("coupon_id");

                    b.HasIndex("product_id");

                    b.ToTable("product_coupons", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Shipping_Info", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("dimension_depth")
                        .HasColumnType("float");

                    b.Property<double>("dimension_height")
                        .HasColumnType("float");

                    b.Property<string>("dimension_unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("dimension_width")
                        .HasColumnType("float");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("volume")
                        .HasColumnType("float");

                    b.Property<string>("volume_unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("weight")
                        .HasColumnType("float");

                    b.Property<string>("weight_unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_PRSP_ID");

                    b.HasIndex("product_id");

                    b.ToTable("product_shipping_info", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Supplier", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("supplier_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PR_SUP_ID");

                    b.HasIndex("product_id");

                    b.HasIndex("supplier_id");

                    b.ToTable("product_suppliers", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Tag", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tag_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_PR_TAG_ID");

                    b.HasIndex("product_id");

                    b.HasIndex("tag_id");

                    b.ToTable("product_tags", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("privileges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_ROLE_ID");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Sell", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_SELL_ID");

                    b.HasIndex("product_id");

                    b.ToTable("sells", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Shipping_Country_Zone", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<int>("shipping_zone_id")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PK_SHIPPINGCONTRYZONE_ID");

                    b.HasIndex("country_id");

                    b.HasIndex("shipping_zone_id");

                    b.ToTable("shipping_country_zones", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Shipping_Rate", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("max_value")
                        .HasColumnType("float");

                    b.Property<double>("min_value")
                        .HasColumnType("float");

                    b.Property<bool>("no_max")
                        .HasColumnType("bit");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<int>("shipping_zone_id")
                        .HasColumnType("int");

                    b.Property<string>("weight_unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_SHIPR_ID");

                    b.HasIndex("shipping_zone_id");

                    b.ToTable("shipping_rates", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Shipping_Zone", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("display_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("free_shipping")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rate_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_SHIPZ_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("shipping_zones", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Slideshow", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("btn_label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("clicks")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destination_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("display_order")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("published")
                        .HasColumnType("bit");

                    b.Property<string>("styles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_SLID_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("slideshows", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Staff_Account", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registered_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_STAFF_ACCOUNT_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("role_id");

                    b.HasIndex("updated_by");

                    b.ToTable("staff_accounts", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Supplier", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address_line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("country_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supplier_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_SUP_ID");

                    b.HasIndex("created_by");

                    b.HasIndex("updated_by");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Tag", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tag_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_TAG_ID");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Varlant", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("variant_option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("variant_option_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_VAR_ID");

                    b.HasIndex("product_id");

                    b.HasIndex("variant_option_id");

                    b.ToTable("variants", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Varlant_Option", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<double>("buying_price")
                        .HasColumnType("float");

                    b.Property<double>("compare_price")
                        .HasColumnType("float");

                    b.Property<Guid>("image_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<double>("sale_price")
                        .HasColumnType("float");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id")
                        .HasName("PK_VAROP_ID");

                    b.HasIndex("image_id");

                    b.HasIndex("product_id");

                    b.ToTable("variant_options", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Varlant_Value", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("product_attribute_value_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("varlant_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id")
                        .HasName("PK_VARVL_ID");

                    b.HasIndex("product_attribute_value_id");

                    b.ToTable("variant_values", (string)null);
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Attribute", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Attribute_Value", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Attribute", "Attributes")
                        .WithMany()
                        .HasForeignKey("attribute_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Card", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Card_Item", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Card", "Cards")
                        .WithMany()
                        .HasForeignKey("card_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cards");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Category", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MacQuocHuy.Exercise02.Models.Category", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("parent_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_PAR_CAT_ID");

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Customer_Addresse", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Gallery", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Notification", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "Staff_Accounts")
                        .WithMany()
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Staff_Accounts");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Order", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Coupon", "Coupons")
                        .WithMany()
                        .HasForeignKey("coupon_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Order_Status", "Order_Statuses")
                        .WithMany()
                        .HasForeignKey("order_status_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupons");

                    b.Navigation("Customers");

                    b.Navigation("Order_Statuses");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Order_Item", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Order_Status", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Attribute", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Attribute", "Attributes")
                        .WithMany()
                        .HasForeignKey("attribute_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attributes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Attribute_Value", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Attribute_Value", "Attribute_Values")
                        .WithMany()
                        .HasForeignKey("attribute_value_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product_Attribute", "Product_Attributes")
                        .WithMany()
                        .HasForeignKey("product_attribute_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attribute_Values");

                    b.Navigation("Product_Attributes");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Category", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Category", "Categories")
                        .WithMany()
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Coupon", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Coupon", "Coupons")
                        .WithMany()
                        .HasForeignKey("coupon_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupons");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Shipping_Info", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Supplier", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Supplier", "Suppliers")
                        .WithMany()
                        .HasForeignKey("supplier_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Product_Tag", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Tag", "Tags")
                        .WithMany()
                        .HasForeignKey("tag_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Sell", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Shipping_Country_Zone", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Countrie", "Countries")
                        .WithMany()
                        .HasForeignKey("country_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Shipping_Zone", "Shipping_Zones")
                        .WithMany()
                        .HasForeignKey("shipping_zone_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Countries");

                    b.Navigation("Shipping_Zones");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Shipping_Rate", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Shipping_Zone", "Shipping_Zones")
                        .WithMany()
                        .HasForeignKey("shipping_zone_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shipping_Zones");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Shipping_Zone", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Slideshow", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Staff_Account", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "Createdbys")
                        .WithMany("InverseCreactedby")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CREATEBY");

                    b.HasOne("MacQuocHuy.Exercise02.Models.Role", "Roles")
                        .WithMany("Staff_Accounts")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SA_RL");

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "Updatedbys")
                        .WithMany("InverseUpdatedBy")
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UPDATEBY");

                    b.Navigation("Createdbys");

                    b.Navigation("Roles");

                    b.Navigation("Updatedbys");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Supplier", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Staff_Account", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("updated_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Varlant", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Varlant_Option", "Varlant_Options")
                        .WithMany()
                        .HasForeignKey("variant_option_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Varlant_Options");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Varlant_Option", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Gallery", "Gallerise")
                        .WithMany()
                        .HasForeignKey("image_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MacQuocHuy.Exercise02.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gallerise");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Varlant_Value", b =>
                {
                    b.HasOne("MacQuocHuy.Exercise02.Models.Product_Attribute_Value", "Product_Attribute_Values")
                        .WithMany()
                        .HasForeignKey("product_attribute_value_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product_Attribute_Values");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Category", b =>
                {
                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Role", b =>
                {
                    b.Navigation("Staff_Accounts");
                });

            modelBuilder.Entity("MacQuocHuy.Exercise02.Models.Staff_Account", b =>
                {
                    b.Navigation("InverseCreactedby");

                    b.Navigation("InverseUpdatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
